{{ include "shared" -}}
FROM ghcr.io/deathcalm/docker:{{ env.version }}-cli-debian-bookworm-slim

# https://github.com/moby/moby/blob/0eecd59153c03ced5f5ddd79cc98f29e4d86daec/project/PACKAGERS.md#runtime-dependencies
# https://github.com/docker/docker-ce-packaging/blob/963aa02666035d4e268f33c63d7868d6cdd1d34c/deb/common/control#L28-L41
RUN set -eux; \
	apt-get update; \
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		btrfs-progs \
		e2fsprogs \
		git \
		iptables \
		openssl \
		pigz \
		uidmap \
		xfsprogs \
		xz-utils \
		iproute2 \
		kmod \
		wget \
		ca-certificates; \
	rm -rf /var/lib/apt/lists/*

# dind might be used on systems where the nf_tables kernel module isn't available. In that case,
# we need to switch over to xtables-legacy. See https://github.com/docker-library/docker/issues/463
RUN set -eux; \
# set up a symlink farm we can use PATH to switch to legacy with (Debian)
    mkdir -p /usr/local/sbin/.iptables-legacy; \
    for f in \
        iptables \
        iptables-save \
        iptables-restore \
        ip6tables \
        ip6tables-save \
        ip6tables-restore \
    ; do \
        case "$f" in \
            iptables) legacy="iptables-legacy" ;; \
            iptables-save) legacy="iptables-legacy-save" ;; \
            iptables-restore) legacy="iptables-legacy-restore" ;; \
            ip6tables) legacy="ip6tables-legacy" ;; \
            ip6tables-save) legacy="ip6tables-legacy-save" ;; \
            ip6tables-restore) legacy="ip6tables-legacy-restore" ;; \
        esac; \
        b="$(command -v "$legacy")"; \
        "$b" --version; \
        ln -svT "$b" "/usr/local/sbin/.iptables-legacy/$f"; \
    done; \
# verify it works (and gets us legacy)
    export PATH="/usr/local/sbin/.iptables-legacy:$PATH"; \
    iptables --version | grep legacy

# set up subuid/subgid so that "--userns-remap=default" works out-of-the-box
RUN set -eux; \
	addgroup --system dockremap; \
	adduser --system --ingroup dockremap dockremap; \
	echo 'dockremap:165536:65536' >> /etc/subuid; \
	echo 'dockremap:165536:65536' >> /etc/subgid

RUN set -eux; \
	\
	{{
		download({
			arches: .arches,
			urlKey: "dockerUrl",
			# TODO sha256Key (once Docker publishes them ðŸ˜­)
			target: "docker.tgz",
		})
	}}; \
	\
	tar --extract \
		--file docker.tgz \
		--strip-components 1 \
		--directory /usr/local/bin/ \
		--no-same-owner \
# we exclude the CLI binary because we already extracted that over in the "docker:{{ env.version }}-cli" image that we're FROM and we don't want to duplicate those bytes again in this layer
		--exclude 'docker/docker' \
	; \
	rm docker.tgz; \
	\
	dockerd --version; \
	containerd --version; \
	ctr --version; \
	runc --version

# https://github.com/docker/docker/tree/master/hack/dind
ENV DIND_COMMIT {{ .dindCommit }}

RUN set -eux; \
	wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"; \
	chmod +x /usr/local/bin/dind

COPY dockerd-entrypoint.sh /usr/local/bin/

VOLUME /var/lib/docker
EXPOSE 2375 2376

ENTRYPOINT ["dockerd-entrypoint.sh"]
CMD []
